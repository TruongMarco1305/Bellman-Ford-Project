\section{Approaching Idea}
To use the Branch and Bound algorithms, first we need to compute the bound (in TSP is the lower bound) on the best solution. We can find the bound of any path by the following idea:\\ \\
For any tour T, the cost of any tour can be written as:
\begin{center}
    Tour cost = $\frac{1}{2}$ $\times$ (Sum of cost of two edges adjacent to u and in the tour T) 
\end{center}
Because for every vertex u, there are two edges through it in T.If we take the sum of all of these edges, it would be twice the cost of tour T.\\ \\
Next, consider every vertex in the graph, we have:
\begin{center}
    (Sum of two tour edges adjacent to u) $\geqslant$ (Sum of minimum weight two edges adjacent to u)   
\end{center}
From that, we have:
\begin{center}
    Cost any tour $\geqslant$ $\frac{1}{2}$ $\times$  (Sum of minimum weight two edges adjacent to u)
\end{center}
After computing the lower bound, apply it to build the space search tree.\\ \\
At the root node (level 1): without loss of generality, assume that the starting city is city A for which the lower bound has been calculated.\\ \\
At level 2: With the map is the complete graph, from city A we can go to city B, city C,... If the next move is to city B, the tour now included the edge A - B. So it is necessary to make changes in the lower bound of the root.
\begin{center}
    Lower Bound for vertex B = Current lower bound - ((minimum edge cost of A + minimum edge cost of B) / 2) + AB cost
\end{center}
For a clearer explaination, I will create an small example of TSP with 4 cities
\begin{center}
    \tikzset{every picture/.style={line width=0.75pt}} %set default line width to 0.75pt        

    \begin{tikzpicture}[x=0.75pt,y=0.75pt,yscale=-1,xscale=1]
    %uncomment if require: \path (0,336); %set diagram left start at 0, and has height of 336
    
    %Shape: Circle [id:dp8852483719720448] 
    \draw   (205,70) .. controls (205,56.19) and (216.19,45) .. (230,45) .. controls (243.81,45) and (255,56.19) .. (255,70) .. controls (255,83.81) and (243.81,95) .. (230,95) .. controls (216.19,95) and (205,83.81) .. (205,70) -- cycle ;
    %Shape: Circle [id:dp9765888742621183] 
    \draw   (376,70) .. controls (376,56.19) and (387.19,45) .. (401,45) .. controls (414.81,45) and (426,56.19) .. (426,70) .. controls (426,83.81) and (414.81,95) .. (401,95) .. controls (387.19,95) and (376,83.81) .. (376,70) -- cycle ;
    %Shape: Circle [id:dp1060732376012139] 
    \draw   (206,165) .. controls (206,151.19) and (217.19,140) .. (231,140) .. controls (244.81,140) and (256,151.19) .. (256,165) .. controls (256,178.81) and (244.81,190) .. (231,190) .. controls (217.19,190) and (206,178.81) .. (206,165) -- cycle ;
    %Shape: Circle [id:dp7781749612954871] 
    \draw   (377,165) .. controls (377,151.19) and (388.19,140) .. (402,140) .. controls (415.81,140) and (427,151.19) .. (427,165) .. controls (427,178.81) and (415.81,190) .. (402,190) .. controls (388.19,190) and (377,178.81) .. (377,165) -- cycle ;
    %Straight Lines [id:da13303541362906368] 
    \draw    (255,70) -- (376,70) ;
    %Straight Lines [id:da7085298181670543] 
    \draw    (230,95) -- (231,140) ;
    %Straight Lines [id:da15835860667428836] 
    \draw    (401,95) -- (402,140) ;
    %Straight Lines [id:da004405079700216641] 
    \draw    (250,85.27) -- (380.33,151.27) ;
    %Straight Lines [id:da7901368293801847] 
    \draw    (382,86.27) -- (254.33,153.27) ;
    %Straight Lines [id:da7094591705832543] 
    \draw    (256,165) -- (377,165) ;
    
    % Text Node
    \draw (225,156.27) node [anchor=north west][inner sep=0.75pt]   [align=left] {B};
    % Text Node
    \draw (396,155.27) node [anchor=north west][inner sep=0.75pt]   [align=left] {C};
    % Text Node
    \draw (224,61.27) node [anchor=north west][inner sep=0.75pt]   [align=left] {D};
    % Text Node
    \draw (396,61.27) node [anchor=north west][inner sep=0.75pt]   [align=left] {A};
    % Text Node
    \draw (307,52) node [anchor=north west][inner sep=0.75pt]   [align=left] {15};
    % Text Node
    \draw (216,109.27) node [anchor=north west][inner sep=0.75pt]   [align=left] {5};
    % Text Node
    \draw (403,113.27) node [anchor=north west][inner sep=0.75pt]   [align=left] {7};
    % Text Node
    \draw (312,167.27) node [anchor=north west][inner sep=0.75pt]   [align=left] {13};
    % Text Node
    \draw (349.8,115.98) node [anchor=north west][inner sep=0.75pt]  [rotate=-27.97] [align=left] {20};
    % Text Node
    \draw (278.36,120.19) node [anchor=north west][inner sep=0.75pt]  [rotate=-333.2] [align=left] {22};
    
    \end{tikzpicture}
\end{center}
Consider the tour $T_1$: A - C - D - B - A, the toal cost of this tour is:
\begin{equation*}
    T_1 = 7 + 20 + 5 + 22 = 54
\end{equation*}
In tour $T_1$, the edges that adjacent to vertex A have the weight 7 and 22. Similarly for vertex B are 22 and 5; vertex C are 20 and 7; vertex D are 5 and 20. Using the above idea:
\begin{equation*}
    T_1 = \frac{1}{2} \times (7 + 22 + 22 + 5 + 20 + 7 + 5 + 20) = 54
\end{equation*}
Or consider tour $T_2$: B - C - A - D - B, the total cost of this tour is: 
\begin{equation*}
    T_2 = 13 + 7 + 15 + 5 = 40
\end{equation*}
In tour $T_2$, the edges that adjacent to vertex B have the weight 13 and 5. Similarly for vertex C is 13 and 7; vertex A is 15 and 7; vertex D is 5 and 15. Using the above idea:
\begin{equation*}
    T_2 = \frac{1}{2} \times (13 + 5 + 13 + 7 + 15 + 7 + 15 + 5) = 40
\end{equation*}
Consider the above graph, we have:
\begin{center}
    \begin{tabular}{|c|c|c|}
        \hline
        Node & Minimum cost edges & Total cost\\
        \hline
        A & (A,D);(A,C) & 22 \\
        \hline
        B & (B,D);(B,C) & 18 \\
        \hline
        C & (C,B);(C,A) & 20 \\
        \hline
        D & (D,B);(D,A) & 20 \\
        \hline
    \end{tabular}
\end{center}
The lower bound of the cost of any tour in the given graph is:
\begin{equation*}
    t = \frac{1}{2} \times (22 + 18 + 20 + 20) = 40
\end{equation*} 